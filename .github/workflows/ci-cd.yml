name: Build and Deploy APK

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      # Checkout the latest code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 11 (required for Android development)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      # Cache Gradle dependencies
#      - name: Cache Gradle dependencies
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle

      # Build the APK
      - name: Build APK
        run: ./gradlew assembleRelease

      # Upload the APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk

  deploy:
    name: Deploy APK
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the latest code (again in the deploy stage)
      - name: Checkout code
        uses: actions/checkout@v3

      # Download the APK artifact
      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: app-release.apk

    # Optionally, deploy the APK to a service like Firebase, Play Store, etc.
    # Here, add deployment steps to your desired platform.
    # Example: Upload to Firebase using a custom action:
    # - name: Upload to Firebase App Distribution
    #   uses: wzieba/Firebase-Distribution-Github-Action@v1
    #   with:
    #     appId: ${{ secrets.FIREBASE_APP_ID }}
    #     token: ${{ secrets.FIREBASE_TOKEN }}
    #     groups: testers
    #     file: app/build/outputs/apk/release/app-release.apk
